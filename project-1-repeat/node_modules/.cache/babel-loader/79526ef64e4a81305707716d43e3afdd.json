{"ast":null,"code":"var _jsxFileName = \"/Users/dong-geon/Desktop/memo/udemy/react/react-complted/project-1-repeat/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport AddUser from \"./components/Users/AddUser\";\nimport UsersList from \"./components/Users/UsersList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  //  userList의 상태관리는 app에서 시작한다.\n  const [usersList, setUsersList] = useState([]);\n\n  const addUserHandler = (uName, uAge) => {\n    setUsersList(prev => {\n      return [{\n        id: Math.floor(Math.random() * 100).toString(),\n        name: uName,\n        age: uAge\n      }, ...prev];\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(AddUser, {\n      onAddUser: addUserHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(UsersList, {\n      users: usersList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"rCuhwovjWVqRB5NhAf7v+2So/Rg=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/dong-geon/Desktop/memo/udemy/react/react-complted/project-1-repeat/src/App.js"],"names":["React","useState","AddUser","UsersList","App","usersList","setUsersList","addUserHandler","uName","uAge","prev","id","Math","floor","random","toString","name","age"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,OAAP,MAAoB,4BAApB;AACA,OAAOC,SAAP,MAAsB,8BAAtB;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,EAAD,CAA1C;;AAEA,QAAMM,cAAc,GAAG,CAACC,KAAD,EAAQC,IAAR,KAAiB;AACtCH,IAAAA,YAAY,CAAEI,IAAD,IAAU;AACrB,aAAO,CACL;AACEC,QAAAA,EAAE,EAAEC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B,EAAgCC,QAAhC,EADN;AAEEC,QAAAA,IAAI,EAAER,KAFR;AAGES,QAAAA,GAAG,EAAER;AAHP,OADK,EAML,GAAGC,IANE,CAAP;AAQD,KATW,CAAZ;AAUD,GAXD;;AAaA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACE,QAAC,OAAD;AAAS,MAAA,SAAS,EAAEH;AAApB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,SAAD;AAAW,MAAA,KAAK,EAAEF;AAAlB;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CAvBD;;GAAMD,G;;KAAAA,G;AAyBN,eAAeA,GAAf","sourcesContent":["import React, { useState } from \"react\";\nimport AddUser from \"./components/Users/AddUser\";\nimport UsersList from \"./components/Users/UsersList\";\n\nconst App = () => {\n  //  userList의 상태관리는 app에서 시작한다.\n  const [usersList, setUsersList] = useState([]);\n\n  const addUserHandler = (uName, uAge) => {\n    setUsersList((prev) => {\n      return [\n        {\n          id: Math.floor(Math.random() * 100).toString(),\n          name: uName,\n          age: uAge,\n        },\n        ...prev,\n      ];\n    });\n  };\n\n  return (\n    <div className=\"container\">\n      <AddUser onAddUser={addUserHandler}></AddUser>\n      <UsersList users={usersList}></UsersList>\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}